# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    ARCHIVE_NAME: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      - name: create-folder ${{ env.ARCHIVE_NAME }}
        run: mkdir ${{ env.ARCHIVE_NAME }}
      - name: copy files 
        run: cp -av bin etc enabled run.sh README.md ${{ env.ARCHIVE_NAME }}
      - name: create-archive
        run: tar -czf "$ARCHIVE_NAME".tar.gz ${{ env.ARCHIVE_NAME }}
      - name: create-checksum
        run: sha256sum "$ARCHIVE_NAME".tar.gz >checksum.txt
      - name: upload-archive
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}.tar.gz
          asset_name: ${{ env.ARCHIVE_NAME }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

